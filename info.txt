How i made this:

**Step 1: Initial Setup**
1. **Create a New Next.js App**  
   First, run the following command to create a new Next.js application with TypeScript, Tailwind CSS, and ESLint:  
   `npx create-next-app@latest app_name --typescript --tailwind --eslint`

2. **Initialize Shadcn UI**  
   To initialize Shadcn UI in your project, execute:  
   `npx shadcn-ui@latest init`

3. **Add a Button Component**  
   To add a button component using Shadcn UI, run the following command:  
   `npx shadcn-ui@latest add button`

4. **Implement the Button**  
   In the button component's page, paste the following code to render a basic button:
   ```javascript
   import { Button } from "@/components/ui/button";

   export default function Home() {
     return (
       <div>
         <Button>Click me</Button>
       </div>
     );
   }
   ```

**Step 2: Enhance Development Experience**
1. **Install ES7+ Extension**  
   Download the ES7+ extension. Once installed, simply type `rafce`, and it will automatically generate the boilerplate code for a React component.

**Step 3: User Authentication with Clerk**
1. **Install Clerk**  
   Install Clerk for user authentication and management by running:  
   `npm install @clerk/nextjs`
   
2. **Configure Clerk API Keys**  
   - Navigate to the Clerk Dashboard.
   - In the navigation sidebar, select **API Keys**.
   - In the **Quick Copy** section, copy your Clerk publishable and secret key.
   - Paste your keys into your `.env.local` file.  
   [Clerk Documentation](https://clerk.com/docs/quickstarts/nextjs)

**Step 4: Set Up Video and Audio Chat with Stream**
1. **Install Stream SDK**  
   To enable video and audio chat in your app, install the Stream SDK:  
   `npm install @stream-io/video-react-sdk`

2. **Set Up Stream Account**  
   - Create an account on Stream: [Stream Dashboard](https://dashboard.getstream.io/organization/1237053/apps)
   - Obtain your API ID and key from the dashboard.

3. **Install Stream API SDK**  
   If you need the API, install the Stream API SDK:  
   `npm install @stream-io/node-sdk`  
   [Stream API Documentation](https://getstream.io/video/docs/api/#installation)

**Step 5: Deploy with Vercel**
1. **Deploy to Vercel**  
   Vercel is ideal for deploying Next.js projects. Follow these steps:
   - Go to Vercel and add a new project.
   - Import your Git repository.
   - In the environment variables section, paste all the contents of your `.env` file.
   - Deploy the project.

2. **Configure Domain Name**  
   - After deployment, copy the domain name from Vercel.
   - Edit the **public base URL** environment variable in the settings by pasting the domain name. This will replace the localhost with the actual website name.
   - Redeploy the project and visit the site to see the new deployment.  

You can now use your application.
